<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>Assembly Language Book</title> 
</head>
<body>

<table>
<tr> <td align=center> <a href="../../https@www.createspace.com/3651611">
<img src="book_front.jpeg" width=50%> </a> </td> <td align=left width=50%>
<center>
<H1> Introduction to 64 Bit Intel Assembly Language Programming </H1>
<H2> Ray Seyfarth </H2>
</center>
</td></tr>
</table>
</center>

<p>
This book is printed by CreateSpace.com and can be purchased from them
at <a href="../../https@www.createspace.com/3651611">
<URL> https://www.createspace.com/3651611 </URL> </a>.
It is available at alternative places now by using Amazon's search facility.
You can search for "64 bit assembly" and find it fairly early in the list.
</p>
<p>
Several sites offer it for slightly less than CreateSpace.
I have made several orders so far from CreateSpace and they seem to be 
quite efficient.
This is a "print on demand" book and you can get a book delivered quite
quickly from CreateSpace for a little extra money.
</p>
<p>
I've given up on turning it into an eBook for now.
It's too hard, the resolution is too small and formats impact quality.
</p>

<p>
This web site contains a short discussion of the textbook, PDF slides for
presentations, source code files and errata.
</p>

</p>

<h2> About the book </h2>
<p>
This book is an introduction to assembly language programming for the x86-64
architecture of CPUs like the Intel Core processors and the AMD Athlon and
Opteron processors.
While assembly language is no longer widely used in general purpose programming,
it is still
used to produce maximum efficiency in core functions in scientific computing and
 in other applications where maximum efficiency is needed.
It is also used to perform some functions which cannot be handled in a
high-level language.
</p>

<p>
The goal of this book is to teach general principles of assembly language
programming.
It targets people with some experience in programming in a high level
language (ideally C or C++), but with
no prior exposure to assembly language.
</p>

<p>
The primary goal of this text is to learn how to write functions callable from 
C or
C++ programs.
This focus should give the reader an increased understanding of how a compiler
implements a high level language.
This understanding will be of lasting benefit in using high level languages.
</p>

<p>
A secondary goal of this text is to introduce the reader to using SSE and AVX
instructions.
The coming trend is for the size of SIMD registers to increase and it generally
requires assembly language to take advantage of the SIMD capabilities.
</p>


<h2> PDF slides for presentation </h2>
    <UL>
         <LI> <a href="ch01-introduction.pdf">Chapter 1: Introduction</LI>
         <LI> <a href="ch02-numbers.pdf">Chapter 2: Numbers</LI>
         <LI> <a href="ch03-memory.pdf">Chapter 3: Computer Memory</LI>
         <LI> <a href="ch04-memory-mapping.pdf">Chapter 4: Memory Mapping</LI>
         <LI> <a href="ch05-registers.pdf">Chapter 5: Registers</LI>
         <LI> <a href="ch06-a-little-math.pdf">Chapter 6: A Little Bit of Math</a> </LI>
         <LI> <a href="ch07-bit-operations.pdf">Chapter 7: Bit Operations</a> </LI>
         <LI> <a href="ch08-branching-looping.pdf">Chapter 8: Branching and
         Looping</a> </LI>
         <LI> <a href="ch09-functions.pdf">Chapter 9: Functions</a> </LI>
         <LI> <a href="ch10-arrays.pdf">Chapter 10: Arrays</a> </LI>
         <LI> <a href="ch11-floating-point.pdf">Chapter 11: Floating Point
         <LI> <a href="ch12-system-calls.pdf">Chapter 12: System Calls</a> </LI>
         <LI> <a href="ch13-structs.pdf">Chapter 13: Structs</a> </LI>
         <LI> <a href="ch14-c-stream-io.pdf">Chapter 14: Using the C stream I/O
         <LI> <a href="ch15-data-structures.pdf">Chapter 15: Data Structures</a> </LI>
         <LI> <a href="ch16-high-performance.pdf">Chapter 16: High Performance
         Assembly Programming</a> </LI>
         <LI> <a href="ch17-counting-bits.pdf">Chapter 17: Counting Bits
         in an Array</a> </LI>
         <LI> <a href="ch18-sobel.pdf">Chapter 18: Sobel Filter</a> </LI>
         <LI> <a href="ch19-correlation.pdf">Chapter 19: Correlation</a> </LI>
    </UL>

<h2> Source code </h2>
    
    <UL> <LI> <a href="src.tgz">Source Code for the Assembly Book</a></LI></UL>

<P>
The source code is distributed as a a gzipped tar file.  After downloading it
you can untar it using "tar xvzf src.tgz".  Then you should be able to enter
any of the chapters like "src/ch07" and use "make" to build the programs.
</P>
<P>
Alternatively you can build all the programs in all the directories using
"make" from the "src" directory.
</P>

<h2> Errata </h2>
    <UL>
        <LI> <a href="preface-errata.html">Preface</a></LI>
        <LI> <a href="ch01-introduction-errata.html">Chapter 1: Introduction</a></LI>
        <LI> <a href="ch02-numbers-errata.html">Chapter 2: Numbers</a></LI>
        <LI> <a href="ch03-memory-errata.html">Chapter 3: Memory</a></LI>
        <LI> <a href="ch04-memory-mapping-errata.html">Chapter 4: Memory Mapping</a></LI>
        <LI> <a href="ch05-registers-errata.html">Chapter 5: Registers</a></LI>
        <LI> <a href="ch07-bits-errata.html">Chapter 7: Bit Operations</a></LI>
        <LI> <a href="ch08-branching-errata.html">Chapter 8: Branching and Looping</a></LI>
        <LI> <a href="ch09-functions-errata.html">Chapter 9: Functions</a></LI>
        <LI> <a href="ch10-arrays-errata.html">Chapter 10: Arrays</a></LI>
        <LI> <a href="ch11-floating-point-errata.html">Chapter 11: Floating Point</a></LI>
        <LI> <a href="ch12-system-calls-errata.html">Chapter 12: System Calls</a></LI>
        <LI> <a href="ch14-c-stream-io-errata.html">Chapter 14: Using the C stream I/O</a></LI>
        <LI> <a href="ch16-high-performance-errata.html">Chapter 16: High Performance Assembly Language</LI>
    </UL>
</body>
</html> 
